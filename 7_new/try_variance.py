import numpy as np
import A7_functions as A7

def True_Variance(mean, dim, samplesize):
    n = samplesize
    d = dim
    r = np.sqrt(dim / 2)
    u2 = np.dot(mean, mean)
    u4 = u2**2

    coeff_cov = r**(2 * d) * (r**2 + 1)**(- d / 2) * (r**2 + 3)**(- d / 2)
    coeff_var = r**(2 * d) * (r**2 + 4)** (- d / 2)
    coeff_both = r**(2 * d) * ( r**2 + 2)**(-d)

    cov_const = (4 * d**2 * r**16 + d * (8 * r**16 + 4 * r**12 + 16 * r**10 + 12 * r**8) + r**8 + 8 * r**6 + 22 * r**4 + 24 * r**2 + 9) / (r**12 * (r**8 + 8 * r**6 + 22 * r**4 + 24 * r**2 + 9))
    cov_u2 = (d * (4 * r**16 + 24 * r ** 14 + 32 * r**12 + 24 * r**10 + 12 * r**8) + r**18 - 6 * r**16 - 7 * r**14 + 40 * r**12 - 3 * r**10 + 14 * r**8 + 133 * r**6 + 102 * r**4 + 60 * r**2 + 18) / (r**6 * (r**12 + 10 * r**10 + 39 * r**8 + 76 * r**6 + 79 * r**4 + 42 * r**2 + 9))
    cov_u4 = (r**2 * (4 * r**12 + 47 * r**10 + 122 * r**8 + 186 * r**6 + 216 * r**4 + 361 * r**2 + 306)) / ((r**2 + 1)**4 * (r**2 + 3)**2)

    term4_const = (d**2 * (6 * r**10 + 12 * r**8 + 4 * r**6 + 8 * r**4 - 16) + d * (r**14 + 6 * r**12 + 22 * r**10 + 32 * r**8 - 4 * r**6 - 40 * r**4 - 32 * r**2 - 32) + r**10 + 10 * r**8 + 32 * r**6 + 32 * r**4) / (r**8 * (r**2 + 2) * (r**2 + 4)**2)
    term4_u2 = (2 * d * (6 * r**12 + 20 * r**10 + 4 * r**8 - 24 * r**6 - 28 * r**4 - 48 * r**2 + 32) + r**16 + 7 * r**14 + 28 * r**12 + 78 * r**10 + 134 * r**8 + 124 * r**6 + 48 * r**4 - 64 * r**2 - 192) / (r**8 * (r**8 + 12 * r**6 + 52 * r**4 + 96 * r**2 + 64))
    term4_u4 = (r**18 + 10 * r**16 + 40 * r**14 + 80 * r**12 + 64 * r**10 -96 * r**8 -216 * r**6 -192 * r**4 - 128 * r**2 + 488) / (r**8 * (r**2 + 2)**3 * (r**2 + 4)**2)

    term6_const = - (d * (d * (3 * r**6 + 8) - 2 * r**8 - 7 * r**6 - 10 * r**4 - 8 * r**2 + 8)) / (r**6 * (r**4 + 8 * r**2 + 16))
    term6_u2 = - (d * (2 * r**10 + 22 * r**8 + 52 * r**6 + 40 * r**4 + 32 * r**2 - 32) - 9 * r**10 - 52 * r**8 - 102 * r**6 - 56 * r**4 + 64 * r**2 + 192) / (r**6 * (r**6 + 10 * r**4 + 32 * r**2 + 32))
    term6_u4 = - (4 * (2 * r**10 + 14 * r**8 + 31 * r**6 + 20 * r**4 -56)) / (r**6 * (r**2 + 2)**2 * (r**2 + 4)**2)

    cov = coeff_cov * (cov_const + cov_u2 * u2 + cov_u4 * u4) - coeff_both * u4
    var = coeff_var * (term4_const + term6_const + (term4_u2 + term6_u2) * u2 + (term4_u4 + term6_u4) * u4) - coeff_both * u2

    return (4 * n * (n - 1) * (n - 2) * cov + 2 * n * (n - 1) * var) / (n**2 * (n - 1)**2)